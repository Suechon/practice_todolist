openapi: 3.0.0
info:
  description: "これは研修用のTODOリストに関するAPIです。"
  version: "1.0.0"
  title: "TODO LIST API"
  termsOfService: "http://swagger.io/terms/"
paths:
  /task:
    get:
      summary: "タスクの取得"
      description: "optionで指定されたタスクを返却します"
      parameters:
        - name: todo
          in: "query"
          description: "trueの時未完了のタスクを返却する"
          required: true
          schema:
            type: boolean
            default: true
            example: true
        - name: done
          in: "query"
          description: "trueの時完了済みのタスクを返却する"
          required: true
          schema:
            type: boolean
            example: true
            default: true
        - name: sort
          in: "query"
          description: "ソート順<br/>[start]:タスク開始日<br/>[limit]:期限日<br/>[title]:タスク名"
          required: true
          schema:
            type: string
            example: "limit"
            enum: [start, limit, title]
            default: limit
        - name: order
          in: "query"
          description: "ソート方向\n<br />[ac]:昇順 <br>[de]:降順"
          required: true
          schema:
            type: string
            example: "ac"
            enum: ["de", "ac"]
            default: "de"
        - name: number
          in: "query"
          description: "表示件数"
          required: true
          schema:
            type: integer
            example: 20
            default: 20
        - name: search
          in: "query"
          description: "タスク名の検索"
          required: true
          schema:
            type: "string"
            default: ""
            example: ""
        - name: page
          in: "query"
          description: "ページ番号"
          required: true
          schema:
            type: integer
            default: 1
            example: 1
      responses:
        "200":
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: object
                "$ref": "#/components/schemas/Task"
    post:
      summary: "タスクの追加"
      requestBody:
        description: "新しいタスクを追加します"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ReqCreateTask"
      responses:
        "200":
          description: "登録成功"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ResCreateTask"
        "400":
          description: "Bad Request"
        "409":
          description: "登録失敗"
  /task/{id}:
    put:
      summary: "タスクの更新"
      parameters:
        - in: path
          name: "id"
          description: "タスクID"
          required: true
          schema:
            type: string
      requestBody:
        description: "タスクを更新します"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ReqUpdateTask"
      responses:
        "200":
          description: "更新成功"
        "400":
          description: "Bad Request"
        "409":
          description: "更新の失敗"
    delete:
      summary: "タスクの削除"
      parameters:
        - in: path
          name: "id"
          description: "タスクID"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "削除成功"
        "409":
          description: "更新の失敗"
  /task/{id}/status:
    patch:
      summary: "ステータスの更新"
      parameters:
        - in: path
          name: "id"
          description: "タスクID"
          required: true
          schema:
            type: string
      requestBody:
        description: "ステータスを更新します"
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ReqUpdateTask"
      responses:
        "200":
          description: "更新成功"
        "400":
          description: "Bad Request"
        "409":
          description: "更新の失敗"

components:
  schemas:
    Task:
      type: object
      required:
        - paging
        - data
      properties:
        paging:
          type: object
          required:
            - total
          properties:
            total:
              type: integer
              description: "全データの件数"
              example: 40
        data:
          type: array
          items:
            type: object
            required:
              - id
              - title
              - start
              - limit
              - status
            properties:
              id:
                type: "integer"
                description: "タスクの一意なID"
                example: "123"
              title:
                type: "string"
                description: "タスクのタイトル"
                example: "タスクのタイトル"
              start:
                type: "string"
                description: "タスクの開始日"
                example: "2020/01/01"
              limit:
                type: "string"
                description: "タスクの期限日"
                example: "9999/12/31"
              memo:
                type: "string"
                description: "タスクのメモ"
                example: "タスクのメモ"
              status:
                type: boolean
                description: "タスクのステータス trueの時未完了"
                example: true

    ReqCreateTask:
      type: object
      required:
        - title
        - start
        - limit
      properties:
        title:
          type: string
          description: "タスクのタイトル"
        start:
          type: string
          description: "タスクの開始日YYYY/MM/DD"
        limit:
          type: string
          description: "タスクの期限日YYYY/MM/DD"
        memo:
          type: string
          description: "タスクの詳細"
    ResCreateTask:
      type: object
      properties:
        id:
          type: "integer"
          description: "タスクの一意なID"
    ReqUpdateTask:
      type: object
      required:
        - title
        - start
        - limit
      properties:
        title:
          type: string
          description: "タスクのタイトル"
        start:
          type: string
          description: "タスクの開始日YYYY/MM/DD"
        limit:
          type: string
          description: "タスクの期限日YYYY/MM/DD"
        memo:
          type: string
          description: "タスクの詳細"
    ReqUpdateTaskStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: boolean
          description: "タスクのステータス<br>[true]:完了<br>[false]:未完了"
